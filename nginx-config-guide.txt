================================================================================
                    GUÍA DE CONFIGURACIÓN NGINX - WINDOWS Y LINUX
================================================================================

Este archivo contiene toda la configuración necesaria para replicar el despliegue
de Angular con Nginx en otros proyectos.

================================================================================
                                CONFIGURACIÓN NGINX
================================================================================

1. ARCHIVO nginx.conf (Windows: C:\nginx\conf\nginx.conf)

worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include mime.types;
    default_type application/octet-stream;
    
    access_log logs/access.log;
    error_log logs/error.log;
    
    gzip on;
    gzip_types text/plain text/css text/javascript application/javascript application/json;
    
    server {
        listen 80;
        server_name localhost;
        
        location / {
            root dist/browser;  # IMPORTANTE: dist/browser, NO dist/gestion-academico-andresdr/browser
            try_files $uri $uri/ /index.html;
            
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-XSS-Protection "1; mode=block" always;
        }
        
        location /auth/ {
            proxy_pass https://TU_IP:30001/auth/;  # CAMBIAR TU_IP por la IP real
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            root dist/browser;
            expires 1y;
        }
        
        error_page 404 /index.html;
    }
}

================================================================================
                                MIME.TYPES
================================================================================

2. ARCHIVO mime.types (Windows: C:\nginx\conf\mime.types)

types {
    text/html html htm shtml;
    text/css css;
    text/xml xml;
    image/gif gif;
    image/jpeg jpeg jpg;
    application/javascript js;
    image/png png;
    image/svg+xml svg svgz;
    application/font-woff woff;
    application/font-woff2 woff2;
    application/json json;
}

================================================================================
                                CONFIGURACIÓN LINUX
================================================================================

3. ARCHIVO DE SITIO (Linux: /etc/nginx/sites-available/tu-proyecto)

server {
    listen 80;
    server_name _;
    
    location / {
        root /var/www/tu-proyecto/dist/browser;  # CAMBIAR 'tu-proyecto' por el nombre real
        try_files $uri $uri/ /index.html;
        
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
    }
    
    location /auth/ {
        proxy_pass https://TU_IP:30001/auth/;  # CAMBIAR TU_IP por la IP real
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
    
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        root /var/www/tu-proyecto/dist/browser;
        expires 1y;
    }
    
    error_page 404 /index.html;
}

================================================================================
                                COMANDOS DE CONTROL
================================================================================

4. COMANDOS WINDOWS:

# Ver procesos Nginx:
tasklist | findstr nginx

# Detener TODOS los procesos:
taskkill /f /im nginx.exe

# Ver puerto 80:
netstat -an | findstr :80

# Probar configuración:
cd C:\nginx
nginx.exe -t

# Iniciar Nginx:
start nginx.exe

================================================================================

5. COMANDOS LINUX:

# Ver procesos Nginx:
ps aux | grep nginx

# Detener TODOS los procesos:
pkill -f nginx

# Ver puerto 80:
netstat -tlnp | grep :80

# Probar configuración:
nginx -t

# Control del servicio:
sudo systemctl start nginx
sudo systemctl stop nginx
sudo systemctl restart nginx
sudo systemctl status nginx

================================================================================
                                ESTRUCTURA DE ARCHIVOS
================================================================================

6. ESTRUCTURA DESPUÉS DEL BUILD:

dist/
└── browser/           # IMPORTANTE: Esta es la carpeta que sirve Nginx
    ├── index.html
    ├── assets/
    ├── *.js
    └── *.css

NOTA: Angular 17+ genera 'dist/NOMBRE_PROYECTO/browser/', pero Nginx debe
apuntar a 'dist/browser/' directamente.

================================================================================
                                PASOS DE DESPLIEGUE
================================================================================

7. FLUJO COMPLETO:

WINDOWS:
1. npm run build
2. Copiar dist/* a C:\nginx\dist\
3. Configurar nginx.conf
4. Ejecutar nginx.exe

LINUX:
1. npm run build
2. Copiar dist/* a /var/www/tu-proyecto/
3. Configurar sitio en /etc/nginx/sites-available/
4. Activar sitio y reiniciar Nginx

================================================================================
                                PUNTOS IMPORTANTES
================================================================================

8. CLAVES PARA ÉXITO:

✅ RUTAS CORRECTAS: dist/browser (NO dist/NOMBRE_PROYECTO/browser)
✅ PUERTO 30001: Para el backend (ajustar según tu proyecto)
✅ IP DINÁMICA: Usar detección automática o variables de entorno
✅ PERMISOS: En Linux, chown www-data:www-data para los archivos
✅ FIREWALL: Permitir puerto 80 en Linux
✅ ERROR_PAGE: error_page 404 /index.html para SPA

================================================================================
                                SOLUCIÓN DE PROBLEMAS
================================================================================

9. PROBLEMAS COMUNES:

❌ Error 500: Verificar rutas en nginx.conf
❌ Puerto 80 ocupado: Detener procesos Nginx existentes
❌ Archivos no encontrados: Verificar que dist/browser existe
❌ Permisos en Linux: chmod 755 y chown www-data:www-data
❌ Múltiples instancias: Usar taskkill (Windows) o pkill (Linux)

================================================================================
                                FINALIZACIÓN
================================================================================

Con esta configuración, tu aplicación Angular funcionará perfectamente con Nginx
tanto en Windows como en Linux, con proxy al backend y manejo correcto de rutas SPA.

¡Recuerda cambiar TU_IP por la IP real de tu backend!


